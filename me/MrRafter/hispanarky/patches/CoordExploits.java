package me.MrRafter.hispanarky.patches;

import lombok.RequiredArgsConstructor;
import me.MrRafter.hispanarky.Main;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerRespawnEvent;
import org.bukkit.event.player.PlayerTeleportEvent;

import java.awt.*;

@RequiredArgsConstructor
public class CoordExploits implements Listener {
    private final Main plugin;

    @EventHandler
    public void onTeleport(PlayerTeleportEvent evt) {
        if (plugin.getConfig().getBoolean("AntiCoordExploitTeleport")) {
            if (evt.getCause().equals(PlayerTeleportEvent.TeleportCause.PLUGIN) || evt.getCause().equals(PlayerTeleportEvent.TeleportCause.COMMAND) || evt.getCause().equals(PlayerTeleportEvent.TeleportCause.ENDER_PEARL)) {
                Point p1 = new Point(evt.getFrom().getBlockX(), evt.getFrom().getBlockZ());
                Point p2 = new Point(evt.getTo().getBlockX(), evt.getTo().getBlockZ());
                if (p1.distance(p2) > plugin.getConfig().getInt("MinDistanceToVanishPlayer")) {
                    vanish(evt.getPlayer());
                    Bukkit.getServer().getScheduler().runTaskLater(plugin, () -> unVanish(evt.getPlayer()), plugin.getConfig().getInt("VanishTimeTeleport"));
                }
            }
        }
    }

    @EventHandler
    public void onSpawn(PlayerRespawnEvent evt) {
        if (plugin.getConfig().getBoolean("AntiCoordExploitTeleport")) {
            Point p1 = new Point(evt.getPlayer().getLocation().getBlockX(), evt.getPlayer().getLocation().getBlockZ());
            Point p2 = new Point(evt.getRespawnLocation().getBlockX(), evt.getRespawnLocation().getBlockZ());
            if (p1.distance(p2) > plugin.getConfig().getInt("MinDistanceToVanishPlayer")) {
                vanish(evt.getPlayer());
                Bukkit.getServer().getScheduler().runTaskLater(plugin, () -> unVanish(evt.getPlayer()), plugin.getConfig().getInt("VanishTimeTeleport"));
            }
        }
    }

    private void vanish(Player p) {
        for (Player onlinePlayer : plugin.getServer().getOnlinePlayers()) {
            if (!onlinePlayer.equals(p)) {
                onlinePlayer.hidePlayer(plugin, p);
            }
        }
    }

    public void unVanish(Player p) {
        for (Player onlinePlayer : plugin.getServer().getOnlinePlayers()) {
            if (!onlinePlayer.equals(p)) {
                onlinePlayer.showPlayer(plugin, p);
            }
        }
    }
}
